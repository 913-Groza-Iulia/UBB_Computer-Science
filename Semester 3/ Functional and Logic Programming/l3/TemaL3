;9. Write a function that removes all occurrences of an atom from any level of a list.

(defun removeAux(l)
  (cond
    ((null l) nil)
    ((and (atom (car l)) (equal (car l) nil)) (removeAux (cdr l)))
    ((atom (car l)) (cons (car l) (removeAux (cdr l))))
    (t (cons (removeAux (car l)) (removeAux (cdr l))))
  )
)

(defun removeElem(l elem)
  (cond
    ((and (atom l) (equal l elem)) nil)
    ((atom l) l)
    (t (apply #'removeAux (list (mapcar #' (lambda (a) (removeElem a elem)) l))))
  )
)

(setq lst '(1 2 3 a (3 4 b) 6 4 3))
(print (removeElem lst '3))
