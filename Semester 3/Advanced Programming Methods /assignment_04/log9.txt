PrgState:
 exeStack: stack= [(Ref int v;(new(varName='v', expression='20');(Ref Ref int a;(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')')))))))]
 symTable: dictionary={}
 out=: items={[]}
 Files table: []
 Heap: 
PrgState:
 exeStack: stack= [Ref int v, (new(varName='v', expression='20');(Ref Ref int a;(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')'))))))]
 symTable: dictionary={}
 out=: items={[]}
 Files table: []
 Heap: 
PrgState:
 exeStack: stack= [(new(varName='v', expression='20');(Ref Ref int a;(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')'))))))]
 symTable: dictionary={v=(0, int)}
 out=: items={[]}
 Files table: []
 Heap: 
PrgState:
 exeStack: stack= [new(varName='v', expression='20'), (Ref Ref int a;(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')')))))]
 symTable: dictionary={v=(0, int)}
 out=: items={[]}
 Files table: []
 Heap: 
PrgState:
 exeStack: stack= [(Ref Ref int a;(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')')))))]
 symTable: dictionary={v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,
PrgState:
 exeStack: stack= [Ref Ref int a, (new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')'))))]
 symTable: dictionary={v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,
PrgState:
 exeStack: stack= [(new(varName='a', expression='v');(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')'))))]
 symTable: dictionary={a=(0, Ref int), v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,
PrgState:
 exeStack: stack= [new(varName='a', expression='v'), (new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')')))]
 symTable: dictionary={a=(0, Ref int), v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,
PrgState:
 exeStack: stack= [(new(varName='v', expression='30');print(readHeap(varName='readHeap(varName='a')')))]
 symTable: dictionary={a=(2, Ref int), v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,2->(1, int),
PrgState:
 exeStack: stack= [new(varName='v', expression='30'), print(readHeap(varName='readHeap(varName='a')'))]
 symTable: dictionary={a=(2, Ref int), v=(1, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,2->(1, int),
PrgState:
 exeStack: stack= [print(readHeap(varName='readHeap(varName='a')'))]
 symTable: dictionary={a=(2, Ref int), v=(3, int)}
 out=: items={[]}
 Files table: []
 Heap: 1->20,2->(1, int),3->30,
PrgState:
 exeStack: stack= []
 symTable: dictionary={a=(2, Ref int), v=(3, int)}
 out=: items={[20]}
 Files table: []
 Heap: 1->20,2->(1, int),3->30,
